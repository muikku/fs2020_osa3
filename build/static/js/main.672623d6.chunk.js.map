{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","services/contacts.js","components/Message.js","App.js","index.js"],"names":["Persons","data","filter","del","e","name","toLowerCase","includes","map","n","key","number","onClick","id","Filter","onSearchFieldChange","search","onChange","value","PersonForm","onFormNameChange","onFormNumberChange","addName","newName","newNumber","onSubmit","type","baseUrl","axios","get","then","res","contact","post","updateContact","put","delete","Message","message","error","className","App","msgTimeout","useState","persons","setPersons","setNewName","setNewNumber","setSearch","messages","setMessages","useEffect","contactService","catch","err","console","log","inform","clearTimeout","setTimeout","event","personObj","window","alert","resObj","concat","updateNumber","find","changed","returnedContact","person","target","preventDefault","confirm","saveContact","updatedContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.672623d6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Persons = ({data, filter, del}) => {\n    \n    return(\n        <div>\n            {data\n            .filter(e => e.name.toLowerCase().includes(filter.toLowerCase()))\n            .map(n => <div key={n.name}>{n.name} {n.number} {<button onClick={() => del(n.id)}>delete</button>}</div>)}\n        </div>\n    )\n    \n}\n\n\nexport default Persons;","import React from 'react';\n\nconst Filter = ({onSearchFieldChange, search}) => {\n    return (\n        <div>\n            filter shown with\n            <input onChange={onSearchFieldChange} value={search} />\n        </div>\n    )\n}\n\nexport default Filter;","import React from 'react';\n\nconst PersonForm = ({onFormNameChange, onFormNumberChange, addName, newName, newNumber}) => {\n    return (\n        <form onSubmit={addName}>\n        <div>\n          name: <input onChange={onFormNameChange} value={newName}/>\n        </div>\n        <div>\n          number: <input onChange={onFormNumberChange} value={newNumber}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n}\n\nexport default PersonForm;","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const req = axios.get(baseUrl)\n    return req.then(res => res.data)\n}\n\nconst create = (contact) => {\n    const req = axios.post(baseUrl, contact)\n    return req.then(res => res.data)\n}\n\nconst update = (id, updateContact) => {\n    const req = axios.put(`${baseUrl}/${id}`, updateContact)\n    return req.then(res => res.data)\n}\n\nconst remove = (id)  => {\n    const req = axios.delete(`${baseUrl}/${id}`)\n    return req.then(res => res.data)\n}\n\nexport default { getAll, create, update, remove }\n","import React from 'react'\n\nconst Message = ({message, error}) => {\n    if(message === null){\n        return null\n    }\n    \nif(error){\n    return(\n        <div className={'error'}>\n            {message}\n        </div>\n    )\n}\n\nreturn (\n    <div className={'success'}>\n        {message}\n    </div>\n)\n}\n\nexport default Message","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport contactService from './services/contacts'\nimport Message from './components/Message'\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ search, setSearch ] = useState('')\n  const [ messages, setMessages ] = useState(null)\n  var msgTimeout;\n\n  useEffect(() => {\n    contactService.getAll().then(res => {setPersons(res)})\n    .catch(err => {\n      console.log('err')\n    })\n  }, [])\n\n  const inform = (message, error) => {\n    clearTimeout(msgTimeout)\n    const theMessage = <Message message={message} error={error}/>\n    setMessages(theMessage)\n    msgTimeout = setTimeout(() => {\n      setMessages(null)\n    }, 10000)\n  }\n\n  const addOrUpdateContact = (event) => {\n    event.preventDefault()\n    if(persons.map(e => e.name).includes(newName)){\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with new one?`)){\n        updateNumber(persons.find(e => e.name === newName).id, newNumber)\n      }\n    } else {\n      addName(event)\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const addName = (event) => {\n    const personObj = {\n        name: newName,\n        number: newNumber\n    }\n    persons.map(e => e.name).includes(personObj.name) ? window.alert(`${personObj.name} is already added to phonebook`) :\n    contactService.create(personObj).then(resObj => {\n      setPersons(persons.concat(resObj))\n      inform(`Added ${resObj.name}`, false)\n    })\n    .catch(err => {\n      inform(`Error: Could add ${newName}`, true)\n    })\n    \n  }\n\n  const removeContact = (id) => {\n    const saveContact = persons.find(e => e.id === id)\n    contactService\n    .remove(id).then(res => {\n      inform(`Deleted contact ${saveContact.name}`, false)\n    })\n    .catch(err => {\n      inform('Error: Could not delete message', true)\n    })\n    const updatedContacts = persons.filter(e => e.id !== id)\n    setPersons(updatedContacts)\n  }\n\n  const updateNumber = (id, number) => {\n    const contact = persons.find(n => n.id === id)\n    const changed = {...contact, number: number }\n    contactService.update(id, changed).then(returnedContact => {\n      setPersons(persons.map(person => person.id !== id ? person : returnedContact))\n      inform(`Updated number of ${returnedContact.name} to ${returnedContact.number}`, false)\n    })\n    .catch(err => {\n      inform(`Information of ${contact.name} has already been removed from server`, true)\n    })\n  }\n\n  const onFormNameChange = (event) => setNewName(event.target.value)\n  const onFormNumberChange = (event) => setNewNumber(event.target.value)\n  const onSearchFieldChange = (event) => setSearch(event.target.value)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <div>{messages ? messages : <div></div>}</div>\n      <Filter onSearchFieldChange={onSearchFieldChange} search={search} />\n      <PersonForm \n        addName={addOrUpdateContact} \n        onFormNameChange={onFormNameChange} \n        newName={newName}\n        onFormNumberChange={onFormNumberChange} \n        newNumber={newNumber} \n      />\n      <h2>Numbers</h2>\n      <Persons data={persons} filter={search} del={removeContact}/>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}